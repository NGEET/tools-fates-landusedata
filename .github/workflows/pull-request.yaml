name: run unit and lint tests for pull requests with multiple python versions

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # show python version being tested
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies with unidep
      run: |
        # unidep allows for installing of conda packages using pyproject.toml
        # this avoids having to only test with pip or manually build conda env file
        conda install -c conda-forge unidep
        unidep install pyproject.toml
    - name: Lint with flake8
      run: |
        # install optional linter dependencies via unidep
        unidep install .["lint"]
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # install optional test dependencies via unidep
        unidep install .["test"]
        pytest
